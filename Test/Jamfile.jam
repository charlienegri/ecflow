## Copyright 2009-2020 ECMWF.
## This software is licensed under the terms of the Apache Licence version 2.0 
## which can be obtained at http://www.apache.org/licenses/LICENSE-2.0. 
## In applying this licence, ECMWF does not waive the privileges and immunities 
## granted to it by virtue of its status as an intergovernmental organisation 
## nor does it submit to any jurisdiction. 

project theTest ;

#
# Test project
#
use-project theCore     : ../ACore ;
use-project theNodeAttr : ../ANattr ;
use-project theNode     : ../ANode  ;  
use-project theBase     : ../Base ;
use-project theServer   : ../Server ;
use-project theClient   : ../Client ;

lib pthread ;

#
# Split into library, so that testing can use library, and hence same compiler option
#
# The <include> means we will automatically add this directory to the include path
# of any other target that uses this lib
#
lib libharness : [ glob src/*.cpp ]
              : <include>../ACore/src
                <include>../ANattr/src 
                <include>../ANode/src 
                <include>../Base/src 
          	    <include>../Base/test 
                <include>../Client/src 
                <include>../Client/test 
                <variant>debug:<define>DEBUG
                <link>static
                <use>/theCore//core
                <use>/theNodeAttr//nodeattr
                <use>/theNode//node
                <use>/theBase//base
           	    <use>/theClient//libclient
            	<use>/site-config//boost_system
             	<use>/site-config//boost_serialization
             	<use>/site-config//boost_filesystem
             	<use>/site-config//boost_program_options
             	<use>/site-config//boost_datetime
       	      :
              : <include>../Test/src         
              ;

# Ignore TestSingle.cpp, used for standalone testing
exe s_test : [ glob Test*.cpp : TestSingle.cpp TestZombies.cpp ]  
	       pthread
           /theCore//core
           /theNodeAttr//nodeattr
           /theNode//node
           /theBase//base
           /theClient//libclient
           libharness
           /site-config//boost_system
           /site-config//boost_serialization
           /site-config//boost_filesystem
           /site-config//boost_program_options
           /site-config//boost_datetime
           /site-config//boost_test
         : <include>../Base/test 
           <variant>debug:<define>DEBUG
           [ conditional <ssl>on : <library>/ecflow_top//openssl_libs ]
 	     ;
 	     
# Split because this was more error prone, Now stabilised all all platforms ?
exe s_test_zombies : [ glob TestZombies.cpp  ]  
          pthread
           /theCore//core
           /theNodeAttr//nodeattr
           /theNode//node
           /theBase//base
           /theClient//libclient
           libharness
           /site-config//boost_system
           /site-config//boost_serialization
           /site-config//boost_filesystem
           /site-config//boost_program_options
           /site-config//boost_datetime
           /site-config//boost_test
         : <include>../Base/test 
           <variant>debug:<define>DEBUG
           [ conditional <ssl>on : <library>/ecflow_top//openssl_libs ]
        ;

# use for standalone testing
exe singletest : [ glob TestSingle.cpp  ]  
	       pthread
           /theCore//core
           /theNodeAttr//nodeattr
           /theNode//node
           /theBase//base
           /theClient//libclient
           libharness
           /site-config//boost_system
           /site-config//boost_serialization
           /site-config//boost_filesystem
           /site-config//boost_program_options
           /site-config//boost_datetime
           /site-config//boost_test
         : <include>../Base/test 
           <variant>debug:<define>DEBUG
           [ conditional <ssl>on : <library>/ecflow_top//openssl_libs ]
 	     ;
